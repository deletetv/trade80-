//@version=5

strategy('ALMA/EMA Strategy', shorttitle='ALMA/EMA 30"', overlay=true,  margin_long=0, margin_short=0, default_qty_type = strategy.cash, initial_capital = 100, pyramiding = 0, default_qty_value = 20, max_bars_back = 100)


dsource = input.source(close, title='Source', group='Dominant ALMA')
dperiod = input.int(title='Period', defval=130, group='Dominant ALMA')
doffset = input.float(title='Offset', step=0.025, defval=0.775, group='Dominant ALMA')
dsigma = input.float(title='Sigma', step=0.5, defval=4.5, group='Dominant ALMA')

dalma = ta.alma(dsource, dperiod, doffset, dsigma)

dalma_up_color = input.color(#66bb6a, 'Going Up!', group='Dominant ALMA', inline = '1')
dalma_down_color = input.color(#ef5350, 'Going Down :(', group='Dominant ALMA', inline = '1')
dcolor = close[1] > dalma ? dalma_up_color : dalma_down_color


plot(dalma, color=dcolor, style=plot.style_stepline, linewidth=2, title='Dominant Momentum MA')



cheatcode = input.bool(true, '-----------CHEATC0DE1------------', group = 'Strategy Inputs', confirm = true)



inp1 = input.int(50, 'Slow Ema Length', 1, 100, group = 'Strategy Inputs', confirm = true)
inp2 = input.int(10, 'Fast Ema Length', 1, 200, group = 'Strategy Inputs', confirm = true)
inp3 = int(200)
sma1 = ta.sma(close, inp3)
ema1 = ta.ema(close, inp1)
ema2 = ta.ema(close, inp2)

eplot1 = plot(ema1, 'Slow Ema', color.aqua, 1,  plot.style_linebr)
eplot2 = plot(ema2, 'Fast Ema', color.yellow, 1,  plot.style_linebr)
splot1 = plot(sma1, 'Long MA', close[1] < sma1 ? color.red:color.green, 1, plot.style_line, display = display.none)

cross1 = ta.crossover(ema1, ema2)
cross2 = ta.crossunder(ema1, ema2)

plotchar(cross2, '', '↑', location.belowbar,  close[1] > dalma and dalma > sma1 ? na:color.green, size = size.normal, editable = false)
plotchar(cross1, '', '↓', location.abovebar, close[1] < dalma and dalma < sma1 ? na:color.red, size = size.normal, editable = false)
bgcolor(cross1 and close[1] > dalma ? color.new(color.green, 80):cross2 and close[1] < dalma ? color.new(color.red, 80):na)

valueL = ta.valuewhen(cross1 and close[1] > dalma, close, 0)
valueS = ta.valuewhen(cross2 and close[1] < dalma, close, 0)


if cross1 and close[2] > dalma[2] and close[1] > dalma[1]
    strategy.entry('Long', strategy.long)
if cross2 and close[2] < dalma[2] and close[1] < dalma[1]
    strategy.entry('Short', strategy.short)
    

    
smoothK = input.int(3, "K", minval=1)
smoothD = input.int(15, "D", minval=1)
lengthRSI = input.int(14, "RSI Length", minval=1)
lengthStoch = input.int(8, "Stochastic Length", minval=1)
src = input(close, title="RSI Source")
rsi1 = ta.rsi(src, lengthRSI)
k = ta.sma(ta.stoch(rsi1, rsi1, rsi1, lengthStoch), smoothK)
d = ta.sma(k, smoothD)



if k > 75
    strategy.cancel('Long')
if k < 25
    strategy.cancel('Short')
    


if ta.crossunder(k, d) and k > 92
    strategy.close('Long')
if ta.crossover(k,d) and k < 8
    strategy.close('Short')



takeP = input.float(1.1, title='Take Profit', group = 'Take Profit and Stop Loss') / 100
stopL = input.float(25, title = 'Stop Loss', group = 'Take Profit and Stop Loss')/100
// Pre Directionality

Stop_L = strategy.position_avg_price * (1 - stopL)

Stop_S = strategy.position_avg_price * (1 + stopL)

Take_S= strategy.position_avg_price * (1 - takeP)

Take_L = strategy.position_avg_price * (1 + takeP)
     
     

if strategy.position_size > 0
    strategy.exit("Flat", limit=Take_L, stop = Stop_L)

if strategy.position_size < 0
    strategy.exit("Flat", limit=Take_S, stop = Stop_S)

stop_loss = input.float(0.2, title='Stop Loss (%)', minval=0.0, maxval=100.0, step=0.1)


if strategy.closedtrades.profit(0) < 0

    if strategy.closedtrades.size(0) > 0 

        if close < strategy.closedtrades.entry_price(0)

            qty = strategy.equity * 0.5 / abs(strategy.closedtrades.entry_price(0) - close)
            strategy.entry('Long', strategy.long, qty=qty, limit=100, comment="L")


            take_profit_price = strategy.closedtrades.entry_price(0)

            stop_loss_price = strategy.closedtrades.entry_price(0) * (1 - stop_loss / 100)

            strategy.exit("TP/SL", "L", limit=take_profit_price, stop=stop_loss_price, qty=qty, comment="Take Profit/Stop Loss")


    else if strategy.closedtrades.size(0) < 0 

        if close > strategy.closedtrades.entry_price(0)

            qty = strategy.equity * 0.5 / abs(strategy.closedtrades.entry_price(0) - close)
            strategy.entry("Short", strategy.short, qty=qty, limit=100, comment="Long Take Profit/Stop Loss")


            take_profit_price = strategy.closedtrades.entry_price(0)

            stop_loss_price = strategy.closedtrades.entry_price(0) * (1 + stop_loss / 100)


            strategy.exit("TP/SL", "Short", limit=take_profit_price, stop=stop_loss_price, qty=qty, comment="Short Take Profit/Stop Loss")
